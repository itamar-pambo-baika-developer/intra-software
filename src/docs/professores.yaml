paths:
  /professores:
    get:
      tags:
        - Professores
      summary: List all teachers
      responses:
        200:
          description: A list of teachers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Professor'

    post:
      tags:
        - Professores
      summary: Criar novo professor
      description: |
        Cria um novo professor a partir do número do BI e e-mail. Os dados do professor são consultados automaticamente via API externa. Após o cadastro, um e-mail é enviado ao professor com um link para criar suas credenciais.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - biNumber
                - email
                - url
              properties:
                biNumber:
                  type: string
                  example: "000000000LA012"
                  description: Número do Bilhete de Identidade do professor.
                email:
                  type: string
                  format: email
                  example: professor@escola.com
                  description: E-mail do professor.
                url:
                  type: string
                  example: "https://intra.software/registrar/"
                  description: URL base para criação de credenciais (o token será anexado automaticamente).
      responses:
        '201':
          description: Professor criado e e-mail enviado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Professor criado e e-mail enviado com sucesso
                  status:
                    type: integer
                    example: 201
                  details:
                    type: string
                    nullable: true
        '400':
          description: Dados inválidos ou BI não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: BI não encontrado ou inválido
                  status:
                    type: integer
                    example: 400
                  details:
                    type: string
                    nullable: true
        '409':
          description: E-mail já cadastrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: E-mail já cadastrado
                  status:
                    type: integer
                    example: 409
                  details:
                    type: string
                    nullable: true
        '500':
          description: Erro interno ao criar professor
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Erro interno ao criar professor
                  status:
                    type: integer
                    example: 500
                  details:
                    type: string
                    nullable: true

  /professores/{id}:
    get:
      tags:
        - Professores
      summary: Get a teacher by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Teacher found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
        404:
          description: Teacher not found

    put:
      tags:
        - Professores
      summary: Update a teacher
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Professor'
      responses:
        200:
          description: Teacher updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
        400:
          description: Bad request
        404:
          description: Teacher not found

    delete:
      tags:
        - Professores
      summary: Delete a teacher
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Teacher deleted
        404:
          description: Teacher not found